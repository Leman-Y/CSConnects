{"version":3,"sources":["util/router.js","images/wics.jpg","images/osc.png","images/google.jpg","images/acm.png","components/ClubCard.js","components/ClubContainer.js","images/facebook.svg","images/insta.svg","components/Navigation.js","components/Icon.js","images/Like.svg","images/notif.svg","images/celebrate.svg","components/IconContainer.js","images/comp.svg","images/burger.svg","pages/Home.js","components/Section.js","images/about.png","pages/About.js","components/SmallSection.js","components/Panel.js","images/plus.svg","pages/Resources.js","components/Calendar.js","pages/Events.js","components/SignUp.js","pages/SignUp.js","SMSForm.js","pages/Contact.js","components/Login.js","pages/Login.js","pages/EventsTest.js","pages/MyAccount.js","pages/App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","Router","children","ScrollToTop","useRouter","params","useParams","location","useLocation","useHistory","match","useRouteMatch","useMemo","push","replace","pathname","query","queryString","parse","search","useEffect","window","scrollTo","ClubCard","props","id","className","onMouseEnter","document","getElementById","style","visibility","onMouseLeave","title","des","href","link","rel","target","image","ClubContainer","tabs","route","name","tabsLoggedIn","socials","icon","facebook","insta","Navigation","useState","loggedIn","setLoggedin","Axios","defaults","withCredentials","get","then","response","data","onClick","onclick","src","x","Burger","burger","map","tab","index","key","exact","activeClassName","to","Icon","IconContainer","HomePage","role","setRole","user","phoneNum","Computer","Like","Notif","Celebrate","wics","osc","acm","google","Section","about_title","about","about2","img","mission_title","mission","AboutPage","SmallSection","Panel","alt","OpenPanel","ResourcesPage","display","placeItems","margin","plus","Calendar","state","dateContext","moment","today","showMonthPopup","showYearPopup","weekdays","weekdaysShort","months","year","format","month","monthNumber","daysInMonth","currentDate","currentDay","firstDayOfMonth","startOf","setMonth","monthNo","indexOf","Object","assign","set","setState","nextMonth","add","onNextMonth","prevMonth","subtract","onPrevMonth","onSelectChange","e","onMonthChange","SelectList","popup","onChangeMonth","MonthNav","showYearEditor","showYearNav","setYear","onYearChange","value","onKeyUpYear","which","YearNav","defaultValue","ref","yearInput","onKeyUp","onChange","type","placeholder","onDoubleClick","onDayClick","day","width","this","blanks","i","d","totalSlots","rows","cells","forEach","row","insertRow","slice","length","trElems","colSpan","React","Component","position","EventsPage","post","myYear","myMonth","myDay","events","entries","event_id","event_name","event_description","_renderObject","SignUp","router","userName","setUsername","userPassword","setPassword","userRole","setuserNameList","signupStatus","setsignupStatus","fontStyle","phone","test","console","log","alert","message","SignUpPage","SMSForm","body","submitting","error","onSubmit","bind","onHandleChange","event","preventDefault","fetch","method","headers","JSON","stringify","res","json","success","getAttribute","htmlFor","disabled","ContactPage","Login","phonenumber","setPhonenumber","password","loginStatus","setLoginStatus","Fragment","autoComplete","reload","LoginPage","club_names","event_types","defaultClub","defaultEventType","DemoApp","date","Date","start_time","end_time","event_location","club_name","event_type","error_message","num","logged","toNotify","notifyMsg","EventsFromDB","handleDateClick","arg","handleEventClick","clickInfo","dates","eventArray","handleClubClick","handleNotifyClick","extendedProps","handleDelete","handleEventSubmit","getFullYear","getMonth","getDate","handleFilterSubmit","clubMap","Map","clubIds","HunterACM","checked","OpenSource","WomeninCS","Appsclub","eventTypeIds","Interview","Social","Network","Career","Hackathon","Study","Exercise","Volunteer","jsonArr","val","keyword_name","Container","backgroundColor","Row","Col","Form","Label","Check","inline","label","Button","variant","plugins","dayGridPlugin","interactionPlugin","initialView","eventClick","dateClick","sm","Table","striped","bordered","responsive","borderRadius","borderColor","color","Control","Group","options","minDate","required","alignItems","justifyContent","MyAccountPage","EventNotifyList","setEventNotifyList","App","path","component","EventsTestPage","MyAccount","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7f057ace.chunk.js","sourcesContent":["import React, { useMemo, useEffect } from \"react\";\nimport {\n  Router as RouterOriginal,\n  useParams,\n  useLocation,\n  useHistory,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport queryString from \"query-string\";\n\nimport { createBrowserHistory } from \"history\";\nexport const history = createBrowserHistory();\n\nexport function Router({ children }) {\n  return (\n    <RouterOriginal history={history}>\n      <ScrollToTop />\n      {children}\n    </RouterOriginal>\n  );\n}\n\nexport function useRouter() {\n  const params = useParams();\n  const location = useLocation();\n  const history = useHistory();\n  const match = useRouteMatch();\n \n  return useMemo(() => {\n    return {\n      push: history.push,\n      replace: history.replace,\n      pathname: location.pathname,\n      query: {\n        ...queryString.parse(location.search),\n        ...params,\n      },\n      match,\n      location,\n      history,\n    };\n  }, [params, match, location, history]);\n}\n\nfunction ScrollToTop() {\n  const location = useLocation();\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n  return null;\n}\n\nexport {\n  Route,\n  Switch,\n  Link,\n  NavLink,\n  useParams,\n  useLocation,\n  useHistory,\n  useRouteMatch,\n} from \"react-router-dom\";\n","export default __webpack_public_path__ + \"static/media/wics.4aaecab3.jpg\";","export default __webpack_public_path__ + \"static/media/osc.5c98ce57.png\";","export default __webpack_public_path__ + \"static/media/google.452a2098.jpg\";","export default __webpack_public_path__ + \"static/media/acm.73e01509.png\";","import React from 'react';\nimport './ClubCard.scss';\n\nfunction showText(id){\n  var x = document.getElementById(id);\n  x.style.visibility = 'visible';\n}\nfunction hideText(id){\n  var x = document.getElementById(id);\n  x.style.visibility = 'hidden';\n}\n\nconst ClubCard = (props) =>(\n  <div id=\"club\" className=\"club-hover\" onMouseEnter={() => showText(props.id)} onMouseLeave={() => hideText(props.id)} >\n    <div id={props.id} className=\"text-container\">\n      <div className=\"club-text\" >\n        <div className=\"card-title\">\n          {props.title}\n          <hr className=\"divider\"></hr>\n        </div>\n        <div className=\"card-description\">\n          {props.des}\n        </div>\n        <div className=\"club-link\">\n          <a href={props.link} rel=\"noreferrer\" target=\"_blank\">Read More</a>\n        </div>\n      </div>\n    </div>\n    <div className=\"Clubs-container\" style={{'--image': `url(${props.image})`}}>\n    </div>\n  </div>\n);\n\nexport default ClubCard;","import React from 'react';\nimport './ClubContainer.scss';\n\nconst ClubContainer = (props) =>{\n  return(\n    <div className=\"club-container\">\n      <div className=\"club-title\">\n        {props.title}\n      </div>\n      <div className=\"wrapper\">\n        {props.children}\n      </div>\n    </div>\n  );\n}\n\nexport default ClubContainer;","export default __webpack_public_path__ + \"static/media/facebook.167baf4c.svg\";","export default __webpack_public_path__ + \"static/media/insta.0e80eee2.svg\";","import React, {useState , useEffect}from 'react';\nimport Axios from 'axios'; //using axios to do api calls\nimport { NavLink, Link} from 'react-router-dom';\nimport facebook from '../images/facebook.svg';\nimport insta from '../images/insta.svg';\nimport './Navigation.scss';\n// import { useRouter } from '../util/router.js';\n\n\n\n\nconst tabs = [{\n  route: \"/\",\n  name: \"Home\",\n},\n{\n  route: \"/TwilioForm\",\n  name: \"TwilioForm\"\n},\n{\n  route: \"/EventsTest\",\n  name: \"Events\",\n},\n{\n  route: \"/About\",\n  name: \"About\",\n},\n{\n  route: \"/Resources\",\n  name: \"Resources\",\n},\n{\n  route: \"/Contact\",\n  name: \"Contact\",\n},\n{\n  route: \"/SignUp\",\n  name: \"Sign In\",\n}]\n\nconst tabsLoggedIn = [{\n  route: \"/\",\n  name: \"Home\",\n},\n{\n  route: \"/TwilioForm\",\n  name: \"TwilioForm\"\n},\n{\n  route: \"/EventsTest\",\n  name: \"Events\",\n},\n{\n  route: \"/About\",\n  name: \"About\",\n},\n{\n  route: \"/Resources\",\n  name: \"Resources\",\n},\n{\n  route: \"/Contact\",\n  name: \"Contact\",\n},\n{\n  route: \"/MyAccount\",\n  name: \"My Account\",\n}]\nconst socials = [\n{\n  link: \"https://www.facebook.com/groups/HunterWomenInCS\",\n  icon: facebook,\n},\n{\n  link: \"https://hunterwics.github.io/\",\n  icon: insta,\n}\n]\n\n\n\nfunction Burger() {\n  var x = document.getElementById(\"nav-container\");\n  if (x.className === \"nav-container\") {\n    x.className += \" responsive\";\n  } else {\n    x.className = \"nav-container\";\n  }\n}\n\n\n\nfunction Navigation(props) {\n\n  const [loggedIn, setLoggedin] = useState(false);\n  Axios.defaults.withCredentials = true;\n  useEffect(()=>{ //everytime the page loads or refreshes, this useEffect will occur\n    Axios.get(\"http://localhost:3001/login\").then((response)=>{\n      if(response.data.loggedIn == true){\n        //console.log(response);\n        setLoggedin(true);\n      }\n      \n    }, {withCredentials: true})\n  }, []);\n\n\n\n return(\n  <nav className=\"nav-container\" id=\"nav-container\">\n\n    <div className=\"line-container\">\n      <div className=\"nav-line\"></div>\n    </div>\n    <a href=\"/\" className=\"home-icon\">\n    <div className=\"left-container\" onClick={props.onclick}>\n        <img className=\"title-icon\" src={props.icon}/>\n        <div className=\"site-title\">{props.name}</div>\n    </div>\n    </a>\n    <a href=\"javascript:void(0);\" className=\"icon\" onClick={() => Burger()}>\n      <img src={props.burger}/>\n    </a>\n    <div className=\"link-container\">\n      {loggedIn ?\n        \n        tabsLoggedIn.map((tab, index) =>(\n          <div className=\"navigation\" key={`tab-${index}`}>\n            <NavLink className=\"nav-routes\" exact activeClassName=\"selected\" to={tab.route}>\n              {tab.name}\n            </NavLink>\n          </div>\n        ))\n        \n        :\n        \n          tabs.map((tab, index) =>(\n            <div className=\"navigation\" key={`tab-${index}`}>\n              <NavLink className=\"nav-routes\" exact activeClassName=\"selected\" to={tab.route}>\n                {tab.name}\n              </NavLink>\n            </div>\n          ))\n          \n      }\n\n      {\n      socials.map((socials, index) =>(\n        <div className=\"navigation\" key={`tab-${index}`}>\n          <Link to={{ pathname: socials.link }} target=\"_blank\" >\n        {/* <img src ={socials.icon}/> */}\n          </Link>\n        </div>\n      ))\n      }\n    </div>\n  </nav>\n);\n\n}\nexport default Navigation;\n\n/* function Navigation(props){\n  const [loginStatus, setLoginStatus] = useState(\"\");\n   Axios.defaults.withCredentials = true;\n\n   useEffect(()=>{ //everytime the page loads or refreshes, this useEffect will occur\n     Axios.get(\"http://localhost:3001/login\").then((response)=>{\n       if(response.data.loggedIn == true){\n         setLoginStatus(\"true\");\n       }else{\n         setLoginStatus(\"false\");\n       }\n    }\n\n  \n  const tabs = [{\n    route: \"/\",\n    name: \"Home\",\n  },\n  {\n    route: \"/Events\",\n    name: \"Events\",\n  },\n  {\n    route: \"/About\",\n    name: \"About\",\n  },\n  {\n    route: \"/Resources\",\n    name: \"Resources\",\n  },\n  {\n    route: \"/Contact\",\n    name: \"Contact\",\n  },\n  {\n    route: \"/SignUp\",\n    name: \"Sign In\",\n  }]\n\n  const tabsLoggedIn = [{\n    route: \"/\",\n    name: \"Home\",\n  },\n  {\n    route: \"/Events\",\n    name: \"Events\",\n  },\n  {\n    route: \"/About\",\n    name: \"About\",\n  },\n  {\n    route: \"/Resources\",\n    name: \"Resources\",\n  },\n  {\n    route: \"/Contact\",\n    name: \"Contact\",\n  },\n  {\n    route: \"/Login\",\n    name: \"My Account\",\n  }]\n  \n  \n  \n  const socials = [{\n    link: \"https://hunterwics.github.io/\",\n    icon: facebook,\n  }, \n  {\n    link: \"https://www.facebook.com/groups/HunterWomenInCS\",\n    icon: facebook,\n  }]\n\n\n\n\n\n\n\n  return(\n  <nav className=\"nav-container\">\n    {loginStatus == 'true' && ( //if loginStatus is true, then render the following HTML\n          <div className=\"link-container\">\n          {\n           tabsLoggedIn.map((tab, index) =>(\n             <div className=\"navigation\" key={`tab-${index}`}>\n               <NavLink className=\"nav-routes\" exact activeClassName=\"selected\" to={tab.route}>\n                 {tab.name}\n               </NavLink>\n             </div>\n           ))\n         }\n         {\n         socials.map((socials, index) =>(\n           <div className=\"navigation\" key={`tab-${index}`}>\n             <Link to={{ pathname: socials.link }} target=\"_blank\" >\n               <img src ={socials.icon}/>\n             </Link>\n           </div>\n         ))\n         }\n       </div>\n    )}\n\n\n    {loginStatus == 'false' && ( //else if loginStatus is false, then render the following HTML. \n          <div className=\"link-container\">\n          {\n           tabs.map((tab, index) =>(\n             <div className=\"navigation\" key={`tab-${index}`}>\n               <NavLink className=\"nav-routes\" exact activeClassName=\"selected\" to={tab.route}>\n                 {tab.name}\n               </NavLink>\n             </div>\n           ))\n         }\n         {\n         socials.map((socials, index) =>(\n           <div className=\"navigation\" key={`tab-${index}`}>\n             <Link to={{ pathname: socials.link }} target=\"_blank\" >\n               <img src ={socials.icon}/>\n             </Link>\n           </div>\n         ))\n         }\n       </div>\n    )}\n\n  </nav>\n  );\n} */\n\n","import React from 'react';\nimport './Icon.scss';\n\nconst Icon=(props)=>(\n  <div className=\"icon-container\">\n    <div className=\"icon-img\">\n      <img src={props.icon}/>\n    </div>\n    <div className=\"icon-des\">\n      {props.des}\n    </div>\n  </div>\n\n);\n\nexport default Icon;\n","export default __webpack_public_path__ + \"static/media/Like.d162bdd2.svg\";","export default __webpack_public_path__ + \"static/media/notif.a42d3460.svg\";","export default __webpack_public_path__ + \"static/media/celebrate.74e74366.svg\";","import React from 'react';\nimport './IconContainer.scss';\n\nconst IconContainer = (props) =>{\n  return(\n    <div>\n      <div className=\"icon-title\">\n        {props.title}\n      </div>\n      <div className=\"icon-wrapper\">\n        {props.children}\n      </div>\n    </div>\n  );\n}\n\nexport default IconContainer;","export default __webpack_public_path__ + \"static/media/comp.4f7794c3.svg\";","export default __webpack_public_path__ + \"static/media/burger.a7699459.svg\";","import React, { useEffect , useState} from 'react';\nimport wics from '../images/wics.jpg';\nimport osc from '../images/osc.png';\nimport google from '../images/google.jpg';\nimport acm from '../images/acm.png';\nimport ClubCard from '../components/ClubCard';\nimport ClubContainer from '../components/ClubContainer';\nimport Navigation from '../components/Navigation';\n// import SMSForm from '../SMSForm';\nimport Icon from '../components/Icon';\nimport Like from '../images/Like.svg';\nimport Notif from '../images/notif.svg';\nimport Celebrate from '../images/celebrate.svg';\nimport IconContainer from '../components/IconContainer';\nimport Computer from '../images/comp.svg';\nimport burger from '../images/burger.svg';\nimport '../styles/Home.scss';\nimport {useRouter} from '../util/router.js'\n\n\n\nimport Axios from 'axios';\n\n\n\nfunction HomePage() {\n  const router = useRouter();\n\n  const [role, setRole] = useState('');\n  Axios.defaults.withCredentials = true;\n\n  useEffect(()=>{ //everytime the page loads or refreshes, this useEffect will occur\n    Axios.get(\"http://localhost:3001/login\").then((response)=>{\n      if(response.data.loggedIn == true){\n        setRole(\"Welcome \" + response.data.user[0].phoneNum + \". You are a \"+ response.data.user[0].role);\n      }\n    })\n  }, []);\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"NavBar\">\n        <Navigation icon={Computer} name=\"CSConnects\" burger={burger}/>\n      </div>\n      <header className=\"App-header\">\n        <h2>{role}</h2>\n        <IconContainer title=\"How to join?\">\n          <Icon icon={Like} des=\"Sign up\"/>\n          <Icon icon={Notif} des=\"Look out for events\"/>\n          <Icon icon={Celebrate} des=\"Have fun!\"/>\n        </IconContainer>\n        <ClubContainer title=\"Meet our clubs!\">\n          <ClubCard image={wics} title=\"Women in Computer Science\" link=\"https://hunterwics.github.io/\" id=\"1\" des=\"A supportive and friendly community for women interested in tech.\"/>\n          <ClubCard image={osc} title=\"Open Source Club\" link=\"https://hunterosc.org/?fbclid=IwAR0C49eFyepwX__DJwg4nkggWhpE0d-cLl06DY1nu8f-8eltissn97QoRyo\" id=\"2\" des=\"A group of Open Source programmers dedicated to using code to make Hunter, and the world at large a better place.\"/>\n          <ClubCard image={acm} title=\"Association for Computer Machinery\" link=\"https://www.hunteracm.org/\" id=\"3\" des=\"We're a community of Hunter College students interested in CS and tech. We design, code, build, and learn about topics not taught in our classes.\"/>\n          <ClubCard image={google} title=\"Google Developer Student Club\" link=\"https://dsc.community.dev/hunter-college/\" id=\"4\" des=\"DSC Hunter is Hunter College's chapter of Google Developer Student Club, supported by Google and Google Developers.\"/>\n        </ClubContainer>\n      </header>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport './Section.scss';\n\nconst Section=(props)=>(\n  <div className=\"section-container\" >\n    <div className=\"section-top\">\n      <div className=\"section-title\">\n        {props.about_title}\n      </div>\n      <div className=\"section-body\">\n        {props.about}\n      </div>\n      <div className=\"section-body\">\n        {props.about2}\n      </div>\n    </div>\n    <img className=\"section-img\" src = {props.img}/>\n    {/* <div className=\"section-img\" style={{\n      '--image': `url(${props.img})`\n    }}></div> */}\n    <div className=\"section-bottom\">\n      <div className=\"section-title\">\n        {props.mission_title}\n      </div>\n      <div className=\"section-body\">\n        {props.mission}\n      </div>\n    </div>\n  </div>\n\n);\n\nexport default Section;","export default __webpack_public_path__ + \"static/media/about.9246490f.png\";","import React from 'react';\nimport Navigation from '../components/Navigation';\nimport Computer from '../images/comp.svg';\nimport burger from '../images/burger.svg';\nimport Section from '../components/Section';\nimport about from '../images/about.png';\nimport '../styles/Home.scss';\nimport '../styles/themes.scss';\n\nfunction AboutPage() {\n  return (\n    <div className=\"App\">\n      <div className=\"NavBar\">\n        <Navigation icon={Computer} name=\"CSConnects\" burger={burger}/>\n      </div>\n      <header className=\"App-header\">\n        <Section about_title=\"About Us\" about=\"College isn’t easy. There’s already so much to naviagte and being in CS at Hunter College \n        means you’ll be juggling all your work on top of all the opportunities you have to keep up on. Many of us have missed opportunities, \n        events, and feel like everything is a mess. That’s why we built CSConnects.\"\n        about2=\"CSConnects aims to bring everything you need to know, as a CS Student at Hunter, right here for your ease. Text reminders for club events, \n        resources for internships, mentorships and linking you to your campus.\"\n        img={about}\n        mission_title=\"Our Mission\" \n        mission=\"CSConnects keeps Hunter students connected to each other, their clubs and their campus with ease.\"\n        />\n      \n      </header>\n    </div>\n  );\n}\n\nexport default AboutPage;\n","import React from 'react';\nimport './Section.scss';\n\nconst SmallSection=(props)=>(\n  <div className=\"section-container\" >\n      <div className=\"section-title\">\n        <a href={props.link}>\n          {props.title}\n        </a>\n      </div>\n      <div className=\"section-des\">\n        {props.about}\n      </div>\n  </div>\n\n);\n\nexport default SmallSection;","import React from 'react';\nimport './Panel.scss';\n\nfunction OpenPanel(id){\n  var x = document.getElementById(id);\n  if (x.className === \"panel-children\") {\n    x.className += \" shown\";\n  } else {\n    x.className = \"panel-children\";\n  }\n}\n\nconst Panel = (props) =>{\n  return(\n    <div className=\"panel\">\n      <div className=\"panel-container\" >\n        <div className=\"accordian\">\n          <div className=\"panel-title\">\n            {props.title}\n          </div>\n          <img className=\"panel-icon\" alt= \"drop down menu\" src={props.icon} onClick={() => OpenPanel(props.id)}>\n          </img>\n        </div>\n        <div id={props.id} className=\"panel-children\">\n          <hr className=\"panel-cut\"></hr>\n          <div>\n            {props.children}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Panel;","export default __webpack_public_path__ + \"static/media/plus.cc1339ee.svg\";","import React from 'react';\nimport Navigation from '../components/Navigation';\nimport Computer from '../images/comp.svg';\nimport burger from '../images/burger.svg';\nimport SmallSection from '../components/SmallSection';\nimport Panel from '../components/Panel';\nimport IconContainer from '../components/IconContainer';\nimport plus from '../images/plus.svg';\nimport '../styles/Home.scss';\nimport '../styles/themes.scss';\n\nfunction ResourcesPage() {\n  return (\n    <div className=\"App\">\n      <div className=\"NavBar\">\n        <Navigation icon={Computer} name=\"CSConnects\" burger={burger}/>\n      </div>\n      {/* <IconContainer title=\"Computer Science Resources\"/> */}\n      <h4 style={{display:'grid',placeItems:'center', margin:'1em'}}>Computer Science Resources</h4>\n      <Panel title=\"Internships & Jobs\" icon={plus} id=\"1\">\n        <SmallSection title=\"Angel\" link=\"https://angel.co/jobs?ref=onboarding\"\n        about=\"Startups nationwide\"/>\n        <SmallSection title=\"Startup Companies\" link=\"https://angel.co/job-collections/52-best-startup-companies-to-watch-out-for-in-2020\" \n        about=\"Some of the best startups to look out for.\"/>\n        <SmallSection title=\"Built In NYC\" link=\"https://www.builtinnyc.com/\" about=\"Startup companies within NYC.\"/>\n        <SmallSection title=\"MrShibe\" link=\"https://mrshibe.me/\" about=\"Find Software Engineering student internships and new grad entry level job.\"/>\n      </Panel>\n      <Panel title=\"Mentorships & Fellowships\" icon={plus} id=\"2\">\n        <SmallSection title=\"BuiltByGirls\" link=\"https://www.builtbygirls.com/about-wave\" about=\"Mentorships for young women and non-binary students.\"/>\n        <SmallSection title=\"RTC\" link=\"https://rewritingthecode.org/fellowship/\" about=\"A national program for college women interested in careers in tech.\"/>\n      </Panel>\n      <Panel title=\"Hunter College Resources\" icon={plus} id=\"3\">\n        <SmallSection title=\"Syllabi Directory\" link=\"http://syllabi.hunterosc.org/\" about=\"This site will hold the syllabi for computer science courses at Hunter College.\"/>\n        <SmallSection title=\"CS Department\" link=\"http://www.hunter.cuny.edu/csci\" about=\"Official webite of Hunter College's CS department.\"/>\n      </Panel>\n    </div>\n  );\n}\n\nexport default ResourcesPage;\n","import React from 'react';\nimport moment from 'moment';\nimport './calendar.css';\n\nexport default class Calendar extends React.Component{\n    constructor(props){\n        super(props);\n        this.width = props.width || \"350px\";\n        this.style = props.style || {};\n        this.style.width = this.width;\n    }\n\n    state ={\n        dateContext: moment(),\n        today: moment(),\n        showMonthPopup: false,\n        showYearPopup: false\n    }\n\n\n    weekdays = moment.weekdays(); //[\"Sunday\", \"Monday\", \"Tuesday\"...]\n    weekdaysShort = moment.weekdaysShort();//[\"Sun\", \"Mond\", \"Tue\"...]\n    months = moment.months();\n\n    year = () =>{\n        return this.state.dateContext.format(\"Y\");\n    }\n    month = () =>{\n        return this.state.dateContext.format(\"MMMM\");\n    }\n\n    monthNumber = () =>{\n        return this.state.dateContext.format(\"M\");\n    }\n    daysInMonth = () =>{\n        return this.state.dateContext.daysInMonth();\n    }\n    currentDate = () =>{\n        return this.state.dateContext.get(\"date\");\n    }\n    currentDay = () =>{\n        return this.state.dateContext.format(\"D\");\n    }\n\n    firstDayOfMonth = () =>{\n        let dateContext = this.state.dateContext;\n        let firstDay = moment(dateContext).startOf('month').format('d');\n        return firstDay;\n    }\n\n    //handles clicking of month from dropdown month menu\n    setMonth = (month) =>{\n        let monthNo = this.months.indexOf(month);\n        let dateContext = Object.assign({}, this.state.dateContext);\n        dateContext = moment(dateContext).set(\"month\", monthNo);\n        this.setState({\n            dateContext: dateContext\n        });\n    }\n\n\n    nextMonth =()=>{\n        let dateContext = Object.assign({}, this.state.dateContext);\n        dateContext = moment(dateContext).add(1, \"month\");\n        this.setState({\n            dateContext: dateContext\n        });\n        this.props.onNextMonth && this.props.onNextMonth();\n    }\n    prevMonth =()=>{\n        let dateContext = Object.assign({}, this.state.dateContext);\n        dateContext = moment(dateContext).subtract(1, \"month\");\n        this.setState({\n            dateContext: dateContext\n        });\n        this.props.onPrevMonth && this.props.onPrevMonth();\n    }\n\n    onSelectChange = (e,data)=>{\n        this.setMonth(data);\n        this.props.onMonthChange && this.props.onMonthChange();\n    }\n\n    SelectList = (props) =>{\n        let popup = props.data.map((data) =>{\n            return(\n                <div key={data}>\n                    <a href=\"#\" onClick={(e) =>{this.onSelectChange(e, data)}}>\n                        {data}\n                    </a>\n                </div>\n            );\n        });\n\n        return (\n            <div className =\"month-popup\">\n                {/* popup is a collection of divs that contain the months */}\n                {popup} \n            </div>\n        );\n    }\n\n    onChangeMonth = (e,month) =>{\n        this.setState({\n            showMonthPopup: !this.state.showMonthPopup\n        });\n    }\n\n    MonthNav = () =>{\n        return(\n            <span className = \"label-month\" onClick={(e)=>{this.onChangeMonth(e, this.month())}}>\n                {this.month()}\n                {this.state.showMonthPopup &&\n                    <this.SelectList data={this.months} />\n                }\n            </span>\n        );\n    }\n\n    showYearEditor = () =>{\n        this.setState({\n            showYearNav: true\n        });\n    }\n\n    setYear = (year) =>{\n        let dateContext = Object.assign({}, this.state.dateContext);\n        dateContext = moment(dateContext).set(\"year\", year);\n        this.setState({\n            dateContext: dateContext\n        });\n    }\n\n    onYearChange = (e) =>{\n        this.setYear(e.target.value);\n        this.props.onYearChange && this.props.onYearChange(e, e.target.value);\n    }\n\n    onKeyUpYear =(e)=>{\n        if(e.which === 13 || e.which === 27){\n            this.setYear(e.target.value);\n            this.setState({\n                showYearNav:false\n            })\n        }\n    }\n    YearNav = () =>{\n        return(\n            this.state.showYearNav ? \n            <input \n            defaultValue = {this.year()}\n            className=\"editor-year\"\n            ref={(yearInput) => {this.yearInput = yearInput}}\n            onKeyUp={(e)=>this.onKeyUpYear(e)}\n            onChange = {(e) =>this.onYearChange(e)}\n            type=\"number\"\n            placeholder=\"year\"\n            />\n            :\n            <span className=\"label-year\" onDoubleClick={(e)=>  {this.showYearEditor()}}>\n\n                {this.year()}\n            </span>\n        );\n    }\n\n\n    onDayClick = (e, day, month, year) =>{\n        this.props.onDayClick && this.props.onDayClick(e,day,month, year);\n    }\n\n    render(){\n        //map the weekdays i.e sun,mon,tue as <td>\n        let weekdays = this.weekdaysShort.map((day)=>{\n            return(\n                <td key={day} className=\"week-day\">{day}</td>\n            )\n        })\n\n        //now working on the empty rows at the beginning of months\n        let blanks = [];\n        for (let i = 0; i < this.firstDayOfMonth(); i++){\n            blanks.push(\n            <td key={i * 80} className =\"emptySlot\">\n            {\"\"}\n            </td>\n            );\n        }\n\n        //HANDLES CLICKING OF DAYS INSIDE CALENDAR\n        let daysInMonth = [];\n        for (let d = 1; d <= this.daysInMonth(); d++){\n            let className = (d == this.currentDate() ? \"day current-day\": \"day\");\n            daysInMonth.push(\n                <td key={d} className={className}>\n                    \n                    <span onClick={(e)=>{this.onDayClick(e,d, this.monthNumber(), this.year())}}>{d} </span>\n                    {/* <span onClick={(e)=>{this.onDayClick(e, moment().format('Y-M-'+d))}}>{d} </span> */}\n\n                </td>\n            )\n        }\n\n        var totalSlots = [...blanks, ...daysInMonth];\n        let rows = [];\n        let cells = [];\n        totalSlots.forEach((row,i) =>{\n            if((i % 7 ) != 0){\n                cells.push(row);\n            }else{\n                let insertRow = cells.slice();\n                rows.push(insertRow);\n                cells = [];\n                cells.push(row);\n            }\n            if(i == totalSlots.length - 1){\n                let insertRow = cells.slice();\n                rows.push(insertRow);\n            }\n        });\n\n        let trElems = rows.map((d, i) =>{\n            return(\n                <tr key={i*100}>\n                    {d}\n                </tr>\n            );\n        })\n\n        return(\n            <div className=\"calendar-container\" style={this.style}>\n                <table className = \"calendar\">\n                    <thead >\n                        <tr className=\"calendar-header\">\n                            <td colSpan = \"5\">\n                                <this.MonthNav />\n                                {\" \"}\n                                <this.YearNav/>\n                            </td>\n                                <td colSpan=\"2\" className=\"nav-month\">\n                                        <i className=\"prev fa fa-fw fa-chevron left\" onClick={(e)=>{this.prevMonth()}}>\n                                            {\"<\"}\n                                        </i>\n                                        <i className=\"prev fa fa-fw fa-chevron right\" onClick={(e)=>{this.nextMonth()}}>\n                                            {\">\"}\n                                        </i>\n                                </td>\n                            \n                        </tr>\n                        <tbody>\n                            <tr>\n                                {weekdays}{/*outputs <td key=sunday> sunday</td>  */}\n                            </tr>\n\n                            {trElems}\n                        </tbody>\n                    </thead>\n                </table>\n            </div>\n        );\n    }\n}","import React, {useState , useEffect, Component}from 'react';\nimport Axios from 'axios'; //using axios to do api calls\nimport Navigation from '../components/Navigation';\nimport EventCard from '../components/EventCard';\nimport Computer from '../images/comp.svg';\nimport burger from '../images/burger.svg';\nimport acm from '../images/acm.png';\nimport '../styles/events.css';\nimport '../styles/Home.scss';\nimport moment from 'moment';\n\nimport Calendar from '../components/Calendar';\n\nconst style = {\n  position: \"relative\",\n  margin: \"50px auto\"\n}\n\n\n\n\nclass EventsPage extends Component{\n\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: {},\n      myDay: '',\n      myMonth: '',\n      myYear: ''\n      };\n \n    \n  };\n\n  onDayClick = (e,day,month, year) =>{\n    Axios.post('http://localhost:3001/api/getEvents', { //makes an API call from the backend server from this specific URL. \n      year: this.state.myYear, \n      month: this.state.myMonth,\n      day: this.state.myDay\n    }).then((response)=>{\n        this.setState({\n          events: response.data\n        })\n      \n\n    });\n\n\n    this.setState({\n      myDay: day,\n      myMonth: month,\n      myYear: year\n    });\n\n  }\n\n//Maisa's changes\n// function EventsPage(){\n \n//   return(\n//     <div className=\"App\">\n//       <div className=\"NavBar\">\n//         <Navigation icon={Computer} name=\"CSConnects\" burger={burger}/>\n//       </div>\n//       <h1>Insert new events</h1>\n//       <div className=\"inputBoxesEvents\">\n\n\n\n\n\n      // {/* <EventCard title=\"Google Mock Tech Interview\" image={acm} time=\"TBA\"/> */}\n      // </div>\n      // );\n\n\n\n  //If this function sees that the event object is updated / changed, it will run this function again, which updates the values inside the table\n\t_renderObject(){\n\t\treturn Object.entries(this.state.events).map(([key, value], i) => {\n\t\t\treturn (\n\t\t\t\t<tr key={key}>\n\t\t\t\t\t<td>{value.event_id}</td>\n\t\t\t\t\t<td>{value.event_name}</td>\n          <td>{value.event_description}</td>\n\t\t\t\t</tr>\n\t\t\t)\n\t\t})\n\t}\n\n  render(){\n    return(\n      <div className=\"App\">\n        <Navigation/>\n        <Calendar id=\"events\"style={style} width = \"500px\" onDayClick={(e , day,month, year)=>this.onDayClick(e,day,month, year)}/>\n        <div>\n          {this.state.myYear}{\"-\"}{this.state.myMonth}{\"-\"}{this.state.myDay}\n          \n          <table id=\"events\">\n          <tr>\n            <th>event_id</th>\n            <th>event name</th>\n            <th>description</th>            \n          </tr>\n\n          {this._renderObject()}\n      </table>\n        </div>\n\n      </div>\n    );\n  }\n\n}\n\n\nexport default EventsPage;\n// const [eventList, seteventList] = useState([]);\n// const [role, setRole] = useState('');\n// const [isAdmin, setisAdmin] = useState(false);\n// Axios.defaults.withCredentials = true;\n\n// export default class DemoApp extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       function getEvents(){\n//         Axios.get('http://localhost:3001/api/getEvents').then((response)=>{\n//           seteventList(response.data);\n//         })\n//         return 0;\n//       }\n//     }\n//   render() {\n//     return (\n//       <FullCalendar\n//         plugins={[ dayGridPlugin ]}\n//         initialView=\"dayGridMonth\"\n//         weekends={false}\n//         events={[\n//           { title: 'event 1', date: '2020-10-01' },\n//           { title: 'event 2', date: '2020-10-02' }\n//         ]}\n//       />\n//     )\n//   }\n//   }\n\n// function getEventsArray(eventList){\n//   let arr = [];\n//   {eventList.map((val)=>{\n      \n//       arr.push(({title:val.event_name,date: val.date }));\n//   })}\n//   console.log(arr);\n//   return arr;\n    \n//   }\n\n\n// function EventsPage(){\n//   Axios.defaults.withCredentials = true;\n//   const [eventList, seteventList] = useState([]);\n//   const [role, setRole] = useState('');\n//   const [isAdmin, setisAdmin] = useState(false);\n//   useEffect(()=>{\n//     Axios.get('http://localhost:3001/api/getEvents').then((response)=>{\n//       seteventList(response.data);\n//     })\n//   }, [])\n\n//   return(\n//     <div className=\"App\">\n//     {getEventsArray(eventList)}\n//     {eventList.map((val)=>{\n//             return (\n//             <div>\n//               {val.date}\n//               {val.event_name}\n//             </div>\n//             );\n//     })}\n//       <FullCalendar\n//         plugins={[ dayGridPlugin ]}\n//         initialView=\"dayGridMonth\"\n//         weekends={false}\n//         // events={\n//         //     getEventsArray(eventList)\n//         // }\n//         eventContent={renderEventContent(eventList)}\n//       />\n//     </div>\n//   );\n\n\n// }\n\n\n\n// import React, {useState , useEffect}from 'react';\n// import Axios from 'axios'; //using axios to do api calls\n// import Navigation from '../components/Navigation';\n// import '../styles/events.css';\n//\n// function EventsPage(){\n\n\n//   Axios.defaults.withCredentials = true;\n//   const [eventList, seteventList] = useState([]);\n//   const [role, setRole] = useState('');\n//   const [isAdmin, setisAdmin] = useState(false);\n//   useEffect(()=>{\n//     Axios.get('http://localhost:3001/api/getEvents').then((response)=>{\n//       seteventList(response.data);\n//     })\n//   }, [])\n  \n//   useEffect(()=>{ //everytime the page loads or refreshes, this useEffect will occur\n//     Axios.get(\"http://localhost:3001/login\").then((response)=>{\n//       if(response.data.loggedIn == true){\n//         if(response.data.user[0].role == 'admin'){\n//           setisAdmin(true);\n//         }\n//         console.log(response.data.user);\n//         setRole(\"Welcome \" + response.data.user[0].phoneNum + \". You are a \"+ response.data.user[0].role);\n//       }else{\n//         setRole(\"not logged in\");\n//       }\n//     })\n//   }, []);\n\n  \n//   return(\n    \n\n//     <div className=\"App\">\n//       <Navigation/>\n//       {role}\n//       <h1>Insert new events</h1>\n\n//       <div className=\"inputBoxesEvents\">\n        \n\n//       {isAdmin ? //if the person is a admin role, then render the input boxes\n//       <React.Fragment>\n//         <div className = \"input_events_container\">\n//           <div className = \"event_name inner_container\">\n//             <p>Event name:</p> <input type=\"text\" />\n//           </div>\n//           <div className = \"event_description inner_container\">\n//             <p>Event description:</p> <input type=\"text\" />\n//           </div>\n//           <div className = \"event_location inner_container\" >\n//             <p>Event location:</p> <input type=\"text\" />\n//           </div>\n\n//         </div>\n//         </React.Fragment>\n//         :\n//         null\n//       }\n\n\n//       </div>\n\n      // <table id=\"events\">\n      //   <tr>\n      //     <th>event_id</th>\n      //     <th>date</th>\n      //     <th>start time</th>\n      //     <th>end time</th>\n      //     <th>event name</th>\n      //     <th>description</th>\n      //     <th>location</th>\n      //     <th>club hosting</th>\n      //     <th>event type</th>\n          \n      //   </tr>\n        // {eventList.map((val)=>{\n        //     return (\n        //     <tr>\n        //       <td>{val.event_id}</td>\n        //       <td>{val.date}</td>\n        //       <td>{val.start_time}</td>\n        //       <td>{val.end_time}</td>\n        //       <td>{val.event_name}</td>\n        //       <td>{val.event_description}</td>\n        //       <td>{val.event_location}</td>\n        //       <td>{val.club_name}</td>\n        //       <td>{val.keyword_name}</td>\n        //     </tr>\n\n        //     );\n        //   })}\n      // </table>\n//     </div>\n//   );\n\n// }\n\n","import React, {useState , useEffect}from 'react';\nimport Axios from 'axios'; //using axios to do api calls\nimport { Router, useRouter } from '../util/router';\nimport './SignUp.scss';\nimport { Button } from 'antd';\n\nfunction SignUp() {\n\n  const router = useRouter();\n  const [userName, setUsername] = useState(\"\");\n  const [userPassword, setPassword] = useState(\"\");\n  const [userRole, setRole] = useState(\"user\");\n  const [userNameList, setuserNameList] = useState([]);\n\n  const [signupStatus, setsignupStatus] = useState(\"\");\n\n  Axios.defaults.withCredentials = true;\n  \n\n  useEffect(()=>{\n    Axios.get('http://localhost:3001/api/get').then((response)=>{\n      setuserNameList(response.data);\n    })\n  }, [])\n\n  //function gets called when user clicks submit.\n  function validate(phone) {\n    const regex = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n    if(regex.test(phone)==true){\n      phone = \"+1\"+phone;\n      console.log(\"true!\",phone)\n      setUsername(phone)\n    }\n    else{\n      console.log(\"nope\")\n      \n    }\n  }\n  const submitUser = () =>{\n    if(userName===\"\")\n    {\n      alert(\"please input a phone number (with your 3 digit area code as a header) in the form 5166951142\")\n    }\n    else{\n    Axios.post('http://localhost:3001/api/insert', { //makes an API call from the backend server from this specific URL. \n      userName: userName, \n      userPassword: userPassword,\n      userRole: userRole\n    }).then((response)=>{\n      if(response.data.message){setsignupStatus(response.data.message);\n      router.push(\"/login\")}\n      // if(response.data.message2){setsignupStatus(response.data.message2);}\n      // else{setsignupStatus(\"Error somewhere \");}\n\n    });\n  }\n  };\n\n\n  return (\n    <div className=\"sign-up\">\n      {/* <div className=\"center\"> */}\n        <div className=\"welcome\">\n          <h1>Welcome!</h1>\n          <h2>Create an account</h2>\n        </div>\n\n        <div className=\"sign-info\"> \n          <p>Phone Number</p>\n          <div style={{fontStyle:\"italic\"}}>Example:5166951142</div>\n          <input className=\"sign-inputs\" type=\"text\" name=\"user\" onChange={(e)=>{ //when the value changes, update the variable setUsername\n            validate(e.target.value);\n\n          }}/>\n          <h5>{signupStatus}</h5>\n          <p>Password</p>\n          <input className=\"sign-inputs\" type=\"password\" name=\"password\" onChange={(e)=>{\n            setPassword(e.target.value);\n          }}/>\n        </div>\n        <br/><br/>\n        <div className=\"button-container\">\n        <Button type=\"primary\" onClick={submitUser}>Create</Button><br />\n       <h5>Already have an account? </h5>\n        <Button type=\"primary\" onClick={() => {\n        router.push('/login');\n      }}>Log In</Button>\n\n        {/* {userNameList.map((val)=>{\n          return (\n          <h1>UserName: {val.phoneNum}</h1>\n          );\n        })} */}\n        </div>\n      </div>\n      // </div>\n  );\n}\n\nexport default SignUp;\n","import React from 'react';\nimport SignUp from '../components/SignUp';\nimport Navigation from '../components/Navigation';\nimport Computer from '../images/comp.svg';\nimport burger from '../images/burger.svg';\n\nfunction SignUpPage() {\n  return (\n    <div>\n      <div className=\"NavBar\">\n        <Navigation icon={Computer} name=\"CSConnects\" burger={burger}/>\n      </div>\n      <SignUp/>\n\n    </div>\n  );\n}\n\nexport default SignUpPage;\n","import React, { Component } from 'react';\nimport Navigation from './components/Navigation'\nimport './components/SignUp.scss';\nimport { Button } from 'antd';\n\n\nimport Computer from './images/comp.svg';\nimport burger from './images/burger.svg';\nimport Section from './components/Section';\nimport about from './images/about.png';\n\nclass SMSForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          message: {\n            to: '',\n            body: '',\n            name:''\n          },\n          submitting: false,\n          error: false\n        };\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onHandleChange = this.onHandleChange.bind(this);\n      }\n    onSubmit(event) {\n        event.preventDefault();\n        this.setState({ submitting: true });\n        fetch('http://localhost:3001/api/messages', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            \n            \n          },\n          body: JSON.stringify(this.state.message)\n        })\n          .then(res => res.json())\n          .then(data => {\n            if (data.success) {\n              this.setState({\n                error: false,\n                submitting: false,\n                message: {\n                  to: '',\n                  body: ''\n                }\n              });\n            } else {\n              this.setState({\n                error: true,\n                submitting: false\n              });\n            }\n          });\n      }\n    \n      onHandleChange(event) {\n        const name = event.target.getAttribute('name');\n        this.setState({\n          message: { ...this.state.message, [name]: event.target.value }\n        });\n      }\n    render() {\n        return (\n          <div>\n             <div className=\"NavBar\">\n        <Navigation icon={Computer} name=\"CSConnects\" burger={burger}/>\n      </div>\n          <form onSubmit = {this.onSubmit} className={this.state.error ? 'error in sms-form' : 'sms-form'}>\n            <div>\n              <h1>Testing Twilio Text</h1>\n              <label htmlFor=\"to\">Phone number (Example: +15166951142)</label>\n              <input\n                 type=\"tel\"\n                 name=\"to\"\n                 id=\"to\"\n                 value={this.state.message.to}\n                 onChange={this.onHandleChange}\n              />\n            </div>\n            {/* <div>\n              <label htmlFor=\"name\">Your Name:</label>\n              <textarea name=\"name\" id=\"name\" value={this.state.message.name} onChange={this.onHandleChange}/>\n            </div> */}\n\n            <div>\n              <label htmlFor=\"body\">Body:</label>\n              <textarea name=\"body\" id=\"body\" value={this.state.message.body} onChange={this.onHandleChange}/>\n            </div>\n            <div className=\"button-container\">\n            <button type=\"submit\" disabled={this.state.submitting}>\n              Send message\n            </button>\n            </div>\n          </form>\n          </div>\n        );\n      }\n}\n\nexport default SMSForm;","import React from 'react';\nimport Navigation from '../components/Navigation';\nimport Computer from '../images/comp.svg';\nimport burger from '../images/burger.svg';\nimport '../styles/Home.scss';\nimport '../styles/themes.scss';\nimport SmallSection from '../components/SmallSection';\n\nfunction ContactPage() {\n  return (\n    <div className=\"App\">\n      <div className=\"NavBar\">\n        <Navigation icon={Computer} name=\"CSConnects\" burger={burger}/>\n      </div>\n      <header className=\"App-header\">\n        <SmallSection title = \"Contact Us\" about = \"csconnects@gmail.com\"/>\n      \n      </header>\n    </div>\n  );\n}\n\nexport default ContactPage;\n","import React, { useEffect, useState} from 'react';\nimport Axios from 'axios';\nimport { setUserSession } from '../util/Common';\nimport { useRouter } from '../util/router.js';\nimport './SignUp.scss';\nimport { Button } from 'antd';\n\nfunction Login(props) {\n  const [loggedIn, setLoggedin] = useState(false);\n\n  const [phonenumber, setPhonenumber] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [loginStatus, setLoginStatus] = useState(\"\");\n\n\n  const router = useRouter();\n\n  Axios.defaults.withCredentials = true;\n\n  const login = () =>{\n    Axios.post('http://localhost:3001/login', { //makes an API call from the backend server from this specific URL. \n      userName: phonenumber, \n      userPassword: password\n    }).then((response)=>{\n        if(response.data.message){ //if there exist a message (the incorrect phone or number message) then that means the login is incorrect\n          setLoginStatus(response.data.message);\n          \n        }\n       \n        else{\n          setLoginStatus(\"You're logged in as \" + response.data[0].phoneNum);\n          setLoggedin(true);\n          window.location.reload();\n          // router.push(\"/\");\n        }\n      \n\n    });\n  };\n\n  const logout = () =>{\n    Axios.get(\"http://localhost:3001/logout\").then((response)=>{\n      if(response.data.loggedIn == false){\n        setLoginStatus(null);\n        setLoggedin(false);\n        window.location.reload();\n      }\n      \n    })\n  };\n\n  useEffect(()=>{ //everytime the page loads or refreshes, this useEffect will occur\n    Axios.get(\"http://localhost:3001/login\").then((response)=>{\n      if(response.data.loggedIn == true){\n        router.push(\"/MyAccount\");\n      }else{\n        router.push(\"/login\");\n      }\n      \n    }, {withCredentials: true})\n  }, []);\n\n  return (\n    <div className=\"sign-up\">\n      <div className=\"welcome\">\n        <h1>Please Sign In:</h1>\n      </div>\n      <div>\n        {loggedIn ? \n          null : \n          <React.Fragment>\n              <p>Phone Number</p>\n              <div style={{fontStyle:\"italic\"}}>Example:5166951142</div>\n                <input className=\"sign-inputs\" type=\"text\" autoComplete=\"new-password\" \n                onChange={(e) =>{\n                  setPhonenumber(\"+1\"+e.target.value);\n                }} />\n        \n                <p>Password</p>\n                <input className=\"sign-inputs\" type=\"password\" autoComplete=\"new-password\" \n                onChange={(e) =>{\n                  setPassword(e.target.value);\n                }}/>\n          </React.Fragment>\n        } \n        \n      </div>\n\n\n      <div className=\"button-container\">\n        <h1>{loginStatus}</h1>\n        {loggedIn ? \n        <React.Fragment>\n          <Button type=\"primary\" onClick={logout} >Logout</Button><br />\n        </React.Fragment> : \n        <React.Fragment>\n          <Button type=\"primary\" onClick={login} >Log In</Button><br />\n          <h5>Don't have an account?</h5>\n          <Button type=\"primary\" onClick={() => {router.push('/signup');}}>Sign up</Button><br />\n        </React.Fragment>\n        } \n\n      </div>\n    </div>\n  );\n}\n\nconst useFormInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  }\n  return {\n    value,\n    onChange: handleChange\n  }\n}\n\nexport default Login;","import React from 'react';\nimport Login from '../components/Login';\nimport Navigation from '../components/Navigation';\nimport Computer from '../images/comp.svg';\nimport burger from '../images/burger.svg';\n\nfunction LoginPage() {\n  return (\n    <div>\n      <div className=\"NavBar\">\n        <Navigation icon={Computer} name=\"CSConnects\" burger={burger}/>\n      </div>\n    <Login/>\n    </div>\n  );\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport Axios from 'axios'; //using axios to do api calls\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\nimport Navigation from '../components/Navigation';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport {Form, Button} from 'react-bootstrap/';\nimport DatePicker from 'react-date-picker'; //for the date picker package\nimport TimePicker from 'react-time-picker'; //for the time picker package\nimport { useForm } from \"react-hook-form\"; //for the form validation package\nimport Table from 'react-bootstrap/Table' // Bootstrap table\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport burger from '../images/burger.svg';\nimport Computer from '../images/comp.svg';\nimport '../styles/events.css';\n\n\nAxios.defaults.withCredentials = true;\n/*\n Get all events from database and then puts the the events into the correct object type to pass into Fullcalendar.\n Relevant doc: https://fullcalendar.io/docs/v3/events-array\n */\n\n\nasync function getAllEventsFromDb() {\n    const arr =  await Axios.get('http://localhost:3001/api/getEvents').then((response) =>\n        response.data\n    ).catch(err => {\n            console.log(err);\n        }\n    )\n    const jsonArr = [];\n\n    /*\n        club_name: \"Apps club\"\n        date: \"2020-11-23\"\n        end_time: \"18:45:00\"\n        event_description: \"Bday bash\"\n        event_id: 11\n        event_location: \"Matt's house\"\n        event_name: \"Matt Bday\"\n        keyword_name: \"study\"\n        start_time: \"18:30:00\"\n     */\n\n    arr.map( (val) =>\n        {\n            //console.log(val);\n            jsonArr.push({\n                title: val.event_name,\n                date: val.date,\n                extendedProps: {\n                    event_id:val.event_id,\n                    club_name: val.club_name,\n                    date: val.date,\n                    start_time: val.start_time,\n                    end_time: val.end_time,\n                    event_description: val.event_description,\n                    event_location: val.event_location,\n                    event_type: val.keyword_name\n\n                }\n            })\n        });\n\n    //console.log('jsonArr: ', jsonArr)\n\n    return jsonArr;\n}\n\nconst club_names= [\n    'Hunter ACM', 'Open Source', 'Women in cs' , 'Apps club'\n];\n\nconst event_types= []; //will be populated once page loads and if user is an admin role\nvar defaultClub = club_names[0];\nvar defaultEventType = event_types[0];\n\n// const { register } = useForm();\n\n\nexport default class DemoApp extends React.Component {\n\n    state = {\n        role : false,\n        date: new Date(),\n        start_time: new Date(),\n        end_time: '',\n        event_name: '',\n        event_description: '',\n        event_location: '',\n        club_name: defaultClub,\n        event_type: '',\n        error_message: '',\n        event : null,\n        num: '',\n        logged:false,\n        toNotify:false,\n        notifyMsg:'',\n        EventsFromDB: []\n    }\n\n\n    componentDidMount() { //makes it so that as soon as the page loads, run the function below that checks if user is an admin\n        //as soon as page runs, check to see if the person is logged in\n        Axios.get(\"http://localhost:3001/login\").then((response)=>{\n            if(response.data.loggedIn == true){\n                this.setState({\n                    logged:true,\n                    num:response.data.user[0].phoneNum\n                })\n                console.log(\"grabbed the num\",this.state.num)\n                //if the person that is logged in is an admin, \n                //then do an api call to grab the list of event types for drop down menu\n                if(response.data.user[0].role == 'admin'){\n                    this.setState({\n                        role: true,\n                        date: new Date()\n                    })\n                    Axios.get('http://localhost:3001/api/getEventType').then((response)=>{\n                        console.log(response.data);\n                        response.data.map( (val) =>\n                        {\n                            event_types.push(val.keyword_name);\n                            \n                        });\n\n                    })\n\n                }\n            }\n        });\n\n        //as soon as page runs, make an api call to grab all events, and populate them into this.state.EventsFromDB\n        Axios.get('http://localhost:3001/api/getEvents').then((response) =>{\n            var jsonArr = [];\n            response.data.map( (val) =>\n            {\n                jsonArr.push({\n                    title: val.event_name,\n                    date: val.date,\n                    extendedProps: {\n                        event_id:val.event_id,\n                        club_name: val.club_name,\n                        date: val.date,\n                        start_time: val.start_time,\n                        end_time: val.end_time,\n                        event_description: val.event_description,\n                        event_location: val.event_location,\n                        event_type: val.keyword_name\n    \n                    }\n                })\n            });\n            this.setState({\n                EventsFromDB: jsonArr\n            })\n            console.log(\"eventsFromDB: \", this.state.EventsFromDB);\n\n        });\n    }\n\n    // Handles the event when a user clicks on a date in the calendar\n    handleDateClick = (arg) => { // bind with an arrow function\n        // alert(arg.dateStr)\n        // Axios.get('http://localhost:3001/api/getEvents').then((response)=>{\n        //     console.log(response.data);\n        // })\n    }\n/*\n  eventClick: function(info) {\n    alert('Event: ' + info.event.title);\n    alert('Coordinates: ' + info.jsEvent.pageX + ',' + info.jsEvent.pageY);\n    alert('View: ' + info.view.type);\n\n    // change the border color just for fun\n    info.el.style.borderColor = 'red';\n  }\n                title: val.event_name,\n                date: val.date,\n                extendedProps: {\n                    club_name: val.club_name,\n                    date: val.date,\n                    start_time: val.start_time,\n                    end_time: val.end_time,\n                    event_description: val.event_description,\n                    event_location: val.event_location,\n                    event_type: val.keyboard_name\n\n                }\n*/\n    handleEventClick = (clickInfo) => {\n        // alert(clickInfo.event.dateStr);\n        // console.log(\"click info: \", clickInfo);\n        // console.log(\"event \", clickInfo.event.title);\n        // console.log(\"event \", clickInfo.event.extendedProps.event_location);\n        // console.log(\"event \", clickInfo.event.extendedProps.club_name);\n       \n        this.setState({\n            event : clickInfo.event\n        })\n        this.toNotify();\n         console.log(\"this state's event: \", this.state.event);\n    }\n\n    dates = '[{\"title\": \"event1\", \"date\": \"2020-11-02\"},{\"title\": \"event2\",\"date\": \"2020-11-04\"}]';\n    eventArray = JSON.parse(this.dates);\n\n    handleClubClick = (event) =>{\n        this.setState({\n            date: event\n        })\n    }\n    toNotify(){\n        //takes the id of the event as well as the phone number of the user and checks if it already exists in the table. \n        //if so it returns false and shows \"notified\"\n        //if not it returns true and shows the button\n\n        Axios.post('http://localhost:3001/api/toNotify', {  \n        event_id: this.state.event.extendedProps.event_id,\n        phoneNum : this.state.num\n       \n        }).then((response)=>{\n            // this.setState({\n            //     error_message: 'successfully inserted'\n            // })\n            console.log(\"response: \",response.data.length)\n            if(this.state.logged === false)\n            {\n                this.setState({\n                    toNotify:false,\n                    notifyMsg:\"Login to get notified!\"\n                }) \n            }\n           else if(response.data.length > 0)\n            {\n               this.setState({\n                   toNotify:false,\n                   notifyMsg:\"You will be notified for this event.\"\n               })\n            }\n          \n            else\n            {\n                this.setState({\n                    toNotify:true,\n                    notifyMsg:\"You will be notified for this event.\"\n                })\n            }\n            \n        });\n    }\n   \n    handleNotifyClick=(event)=>{\n        \n        Axios.post('http://localhost:3001/api/insertNotification', {  \n        event_id: this.state.event.extendedProps.event_id,\n        phoneNum : this.state.num\n       \n        }).then((response)=>{\n            this.setState({\n                error_message: 'successfully inserted',\n                toNotify:false,\n            })\n            console.log(\"finished posting!\")\n            // event.preventDefault();\n        });\n        //========\n      \n        //make the insert post request here\n    }\n    handleDelete=(event)=>{\n        this.setState({\n            error_message: \"\"\n        })\n        Axios.post('http://localhost:3001/api/deleteAdmin', {  \n        event_id: this.state.event.extendedProps.event_id,\n       \n        }).then((response)=>{\n           \n            console.log(\"finished deleting event\")\n            window.location.reload(false);\n            \n        });\n        //========\n       \n        //make the insert post request here\n    }\n    handleEventSubmit = (event) =>{\n        if(this.state.event_name == ''){\n            this.setState({\n                error_message: \"Please enter a event name\"\n            })\n        }else if(this.state.event_description == ''){\n            this.setState({\n                error_message: \"Please enter a event description\"\n            })\n        }else if(this.state.event_location == ''){\n            this.setState({\n                error_message: \"Please enter a event location\"\n            })\n        }else{\n            this.setState({\n                error_message: \"\"\n            })\n            Axios.post('http://localhost:3001/api/insertEvent', { //makes an API call from the backend server from this specific URL. \n            date: this.state.date.getFullYear() + \"-\" + (this.state.date.getMonth()+1) + \"-\" + this.state.date.getDate(),\n            start_time: this.state.start_time,\n            end_time: this.state.end_time,\n            event_name: this.state.event_name,\n            event_description: this.state.event_description,\n            event_location: this.state.event_location,\n            club_name: this.state.club_name,\n            event_type: this.state.event_type\n            }).then((response)=>{\n                this.setState({\n                    error_message: 'successfully inserted'\n                })\n            });\n            }\n        // console.log(event);\n        //event.preventDefault();\n        \n    }\n\n    handleFilterSubmit = (event) =>\n    {\n        event.preventDefault();\n\n        const clubMap = new Map([\n            ['HunterACM', 1],\n            ['OpenSource', 2],\n            ['WomeninCS', 3],\n            ['Appsclub', 4]\n        ]);\n\n        const clubIds = [];\n\n        if (event.target.HunterACM.checked)\n        {\n            clubIds.push(clubMap.get('HunterACM'));\n        }\n        if (event.target.OpenSource.checked)\n        {\n            clubIds.push(clubMap.get('OpenSource'));\n        }\n        if (event.target.WomeninCS.checked)\n        {\n            clubIds.push(clubMap.get('WomeninCS'));\n        }\n        if (event.target.Appsclub.checked)\n        {\n            clubIds.push(clubMap.get('Appsclub'));\n        }\n\n        const eventTypeMap = new Map([\n           ['Interview', 1],\n            ['Social', 2],\n            ['Network', 3],\n            ['Career', 4],\n            ['Hackathon', 5],\n            ['Study', 6],\n            ['Exercise', 7],\n            ['Volunteer', 8]\n        ]);\n\n        const eventTypeIds = [];\n\n        if (event.target.Interview.checked)\n        {\n            eventTypeIds.push(1);\n        }\n        if (event.target.Social.checked)\n        {\n            eventTypeIds.push(2);\n        }\n        if (event.target.Network.checked)\n        {\n            eventTypeIds.push(3);\n        }\n        if (event.target.Career.checked)\n        {\n            eventTypeIds.push(4);\n        }\n        if (event.target.Hackathon.checked)\n        {\n            eventTypeIds.push(5);\n        }\n        if (event.target.Study.checked)\n        {\n            eventTypeIds.push(6);\n        }\n        if (event.target.Exercise.checked)\n        {\n            eventTypeIds.push(7);\n        }\n        if (event.target.Volunteer.checked)\n        {\n            eventTypeIds.push(8);\n        }\n\n        \n        // console.log(\"club ids: \", clubIds);\n        // console.log('event ids: ', eventTypeIds);\n\n        //if the user clicks submit and there is nothing selected for filter\n        if(clubIds.length <= 0 && eventTypeIds.length <=0){\n            window.location.reload();\n        }else{\n\n        //else, make an API call that grabs events that are filtered\n            //console.log(\"something is selected\");\n            Axios.post('http://localhost:3001/api/getFilteredEvent', { //makes an API call from the backend server from this specific URL. \n                clubIds: clubIds,\n                eventTypeIds: eventTypeIds\n            }).then((response)=>{\n                var jsonArr = [];\n                response.data.map( (val) =>\n                {\n                    \n                    jsonArr.push({\n                        title: val.event_name,\n                        date: val.date,\n                        extendedProps: {\n                            event_id:val.event_id,\n                            club_name: val.club_name,\n                            date: val.date,\n                            start_time: val.start_time,\n                            end_time: val.end_time,\n                            event_description: val.event_description,\n                            event_location: val.event_location,\n                            event_type: val.keyword_name\n        \n                        }\n                    })\n                });\n                this.setState({\n                    EventsFromDB: jsonArr\n                })\n                console.log(\"eventsFromDB: \", this.state.EventsFromDB);\n            });\n        }\n\n\n    }\n   \n    \n    render() {\n        return (\n        <div>\n            <Navigation icon={Computer} name=\"CSConnects\" burger={burger}/>\n            <div className=\"main_container\">\n                <div className=\"calendar_container\" style={{width: \"50vw\"}}>  \n\n\n                </div>\n                <div className=\"eventInfo_container\" style={{width: \"49vw\"}}>\n\n\n                </div>\n            <Container className=\"calendar\" style={{backgroundColor:\"#f8f9fc\"}}>\n                <Row>\n                    <Col>\n                        <Form className=\"border border-dark m-2 p-2\" onSubmit={this.handleFilterSubmit}>\n                            <Form.Label>Club</Form.Label>\n                            <div key={`inline-${'checkbox'}`} className=\"mb-3\">\n                                <Form.Check inline label=\"Hunter ACM\" name=\"HunterACM\" type={'checkbox'} id={`inline-${'checkbox'}-1`} />\n                                <Form.Check inline label=\"Open Source\" name=\"OpenSource\" type={'checkbox'} id={`inline-${'checkbox'}-2`} />\n                                <Form.Check inline label=\"Women in CS\" name =\"WomeninCS\" type={'checkbox'} id={`inline-${'checkbox'}-1`} />\n                                <Form.Check inline label=\"Apps club\" name =\"Appsclub\" type={'checkbox'} id={`inline-${'checkbox'}-1`} />\n                            </div>\n                            <Form.Label>Event Type</Form.Label>\n                            <div key={`inline-${'checkbox2'}`} className=\"mb-3\">\n                                <Form.Check inline label=\"Interview\" name=\"Interview\" type={'checkbox'} id={`inline-${'checkbox'}-1`} />\n                                <Form.Check inline label=\"Social\" name=\"Social\" type={'checkbox'} id={`inline-${'checkbox'}-2`} />\n                                <Form.Check inline label=\"Network\" name=\"Network\" type={'checkbox'} id={`inline-${'checkbox'}-2`} />\n                                <Form.Check inline label=\"Career\" name=\"Career\" type={'checkbox'} id={`inline-${'checkbox'}-2`} />\n                                <Form.Check inline label=\"Hackathon\" name=\"Hackathon\" type={'checkbox'} id={`inline-${'checkbox'}-2`} />\n                                <Form.Check inline label=\"Study\" name=\"Study\" type={'checkbox'} id={`inline-${'checkbox'}-2`} />\n                                <Form.Check inline label=\"Exercise\" name=\"Exercise\" type={'checkbox'} id={`inline-${'checkbox'}-2`} />\n                                <Form.Check inline label=\"Volunteer\" name=\"Volunteer\" type={'checkbox'} id={`inline-${'checkbox'}-2`} />\n\n                            </div>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Filter\n                            </Button>\n                        </Form>\n\n                        <FullCalendar\n                            plugins={[ dayGridPlugin, interactionPlugin ]}\n                            initialView=\"dayGridMonth\"\n                            events={this.state.EventsFromDB}\n                            eventClick = {this.handleEventClick}\n                            dateClick = {this.handleDateClick}\n                        />\n                    </Col>\n                    <Col sm={4}>\n                        {this.state.event ?\n                            <React.Fragment>\n                                <Table striped bordered  responsive=\"md\" style={{backgroundColor:\"#f8f9fc\"}}>\n                                    <thead>\n                                    <tr>\n                                        <th colSpan=\"2\">Event Information</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    <tr>\n                                        <td>Title</td>\n                                        <td>{this.state.event.title}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Date</td>\n                                        <td>{this.state.event.extendedProps.date}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Club</td>\n                                        <td>{this.state.event.extendedProps.club_name}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Event Type</td>\n                                        <td>{this.state.event.extendedProps.event_type}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Location</td>\n                                        <td>{this.state.event.extendedProps.event_location}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Start Time</td>\n                                        <td>{this.state.event.extendedProps.start_time}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>End Time</td>\n                                        <td>{this.state.event.extendedProps.end_time}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Description</td>\n                                        <td>{this.state.event.extendedProps.event_description}</td>\n                                    </tr>\n                                    </tbody>\n                                    {/* {console.log(\"toNotify\",this.toNotify())} */}\n                                    {/* {this.state.logged===false &&<div>{this.state.notifyMsg}</div>} */}\n                                    {\n                                        \n                                       (this.state.toNotify === true) ?( <button style={{backgroundColor:\"purple\",borderRadius:\"4px\",borderColor:\"purple\", color:\"white\"}} onClick={this.handleNotifyClick}>Notify Me!</button>):(<div>{this.state.notifyMsg}</div>)\n                                        //: (<div>You will be notified for this event!</div>)\n                                    }\n                                    {this.state.role &&<button style={{backgroundColor:\"purple\",borderRadius:\"4px\",borderColor:\"purple\", color:\"white\"}} onClick={this.handleDelete}>Delete this event</button>}\n                                    \n                                    {/* <p>{this.state.error_message}</p> */}\n                                \n                                   \n                                </Table>\n                            </React.Fragment>\n                            : null}\n                    </Col>\n                </Row>\n\n\n            </Container>\n            </div>\n            {this.state.role ?\n                <React.Fragment>\n                    \n                    <form onSubmit={this.handleEventSubmit}>\n                     \n                    \n                    <div className = \"admin_container\">\n                   \n                            {/* <p>{this.state.club_name}</p>\n                            <p>{this.state.date.getFullYear() + \"-\" + (this.state.date.getMonth()+1) + \"-\" + this.state.date.getDate()}</p>\n                            <p>{this.state.event_type}</p>\n                            <p>{this.state.start_time}</p>\n                            <p>{this.state.end_time}</p> */}\n                            <div className = \"admin_left_container\">\n                            <h1 style={{color: \"black\"}}>Insert a new event:</h1>\n                            <div className=\"error_container\">\n                            \n                            <p>{this.state.error_message}</p>\n                            \n                        </div>\n                            <Form.Row>\n                                <Col>\n                                    <Form.Label>Event Name</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Example: Technical Interview Prep\" onChange={(e)=>{\n                                        this.setState({\n                                            event_name: e.target.value\n                                        })\n                                    }}/>\n                                </Col>\n\n                                <Col >\n                                    <Form.Label>Event Description</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Example: We will whiteboard together...\" onChange={(e)=>{\n                                        this.setState({\n                                            event_description: e.target.value\n                                        })\n                                    }}/>\n                                </Col>\n                                </Form.Row>\n\n                                <Form.Group >\n                                    <Form.Label>Event Location</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Example: Zoom Link \" onChange={(e)=>{\n                                        this.setState({\n                                            event_location: e.target.value\n                                        })\n                                    }}/>\n                                </Form.Group>\n                            </div>\n\n                            <div className = \"admin_right_container\">\n                                <div className=\"club_container inner_container\">\n                                    <label>Which club is hosting this event?</label>\n                                    <Dropdown className=\"event_type_dropdown\" options={club_names} onChange={club_name=> this.setState({club_name: club_name.value})} value={defaultClub} placeholder=\"Select an option\" />\n                                </div>\n\n                                <div className=\"event_type_container inner_container\">\n                                    <label>Event Type</label>\n                                    <Dropdown className=\"event_type_dropdown\" options={event_types} onChange={event_type=> this.setState({event_type: event_type.value})} value={defaultEventType} placeholder=\"Select an option\" />\n                                </div>\n\n                                <Form.Row>\n                                    <Col>\n                                <Form.Group>\n                               \n                                <div className=\"date_container inner_container\">\n                                    <label>Date of event </label>\n                                    <DatePicker \n                                    value={this.state.date} //this is what is inside the input of the date \n                                    // onChange={date => this.setState({date: date})} //when you change the date, update state\n                                    onChange={this.handleClubClick} //when you change the date, update state\n                                    // format='y-MM-dd'\n                                    format='y-MM-dd'\n                                    \n                                    minDate={new Date()} //makes it so you can't choose dates before current date\n                                    required\n                                    />\n                                </div>\n                                </Form.Group>\n                                </Col>\n                                <Col>\n                                <Form.Group>\n                                <div className=\"time_start_container inner_container\">\n                                    <label>Start Time </label>\n                                    <TimePicker\n                                    onChange={start_time => this.setState({start_time: start_time})}\n                                    value={this.state.start_time}\n                                    // minTime={new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds()}\n                                    />\n                                </div>\n                                </Form.Group>\n                                </Col>\n                               \n                                <Col>\n                                <Form.Group>\n                                <div className=\"time_end_container inner_container\">\n                                    <label>End Time </label>\n                                    <TimePicker\n                                    onChange={end_time => this.setState({end_time: end_time})}\n                                    value={this.state.end_time}\n                                    // minTime={this.state.start_time.getHours() + ':' + this.state.start_time.getMinutes() + ':' + this.state.start_time.getSeconds()}\n                                    />\n                                </div>\n                                </Form.Group>\n                                </Col>\n                                </Form.Row>\n                           \n\n\n                   <Form.Group>\n                    <div className=\"button-container\" >\n                    <Button variant=\"primary\" type=\"submit\" style={{backgroundColor: \"purple\",borderColor:\"purple\",alignItems:\"center\",display:\"felx\",justifyContent:\"center\"}}>\n                        Submit\n                    </Button>\n                     </div>\n                     </Form.Group>\n\n                    </div>\n                    </div>\n                    </form>\n                </React.Fragment>\n            :\n                null\n            }\n\n        </div>\n        )\n    }\n\n}\n","import React, { useEffect, useState} from 'react';\nimport Axios from 'axios';\nimport { useRouter } from '../util/router.js';\nimport Login from '../components/Login';\nimport Navigation from '../components/Navigation';\nimport Computer from '../images/comp.svg';\nimport burger from '../images/burger.svg';\nimport '../styles/MyAccount.css';\n\nimport { Button } from 'antd';\n\n\n\nfunction MyAccountPage() {\n  const [loggedIn, setLoggedin] = useState(false);\n\n\n  const [loginStatus, setLoginStatus] = useState(\"\");\n\n  const [EventNotifyList, setEventNotifyList] = useState([]);\n\n\n  const router = useRouter();\n\n  Axios.defaults.withCredentials = true;\n\n  useEffect(()=>{ //everytime the page loads or refreshes, this useEffect will occur\n    Axios.get(\"http://localhost:3001/api/getNotifyEvent\").then((response)=>{\n      if(response.data.loggedIn == true){\n        setLoginStatus(\"Welcome \" + response.data.user[0].phoneNum + \". You are a \"+ response.data.user[0].role);\n        setEventNotifyList(response.data.events);\n      }\n    })\n  }, []);\n\n\n\n  \n  const logout = () =>{\n    Axios.get(\"http://localhost:3001/logout\").then((response)=>{\n      if(response.data.loggedIn == false){\n        setLoginStatus(null);\n        setLoggedin(false);\n        // window.location.reload();\n        router.push(\"/login\");\n      }\n      \n    })\n  };\n\n\n\n\n  return (\n    <div>\n      <div className=\"NavBar\">\n        <Navigation icon={Computer} name=\"CSConnects\" burger={burger}/>\n      </div>\n      <div className=\"sign-up\">\n        <div className=\"button-container\">\n          <h1>{loginStatus}</h1>\n\n          {loggedIn ? \n          <React.Fragment>\n            <Button type=\"primary\" onClick={logout} >Logout</Button><br />\n          </React.Fragment>\n          :\n          null\n          }\n        </div>\n      </div>\n      <div className=\"notify_event_container\">\n        <table id=\"events\">\n          <tr>\n            \n            <th>event name</th>\n            <th>description</th>\n            <th>location</th>\n            <th>club hosting</th>\n            <th>event type</th>\n            \n          </tr>\n\n\n        \n          {EventNotifyList.map((val)=>{\n              return (\n              <tr>\n                <td>{val.event_name}</td>\n                <td>{val.event_description}</td>\n                <td>{val.event_location}</td>\n                <td>{val.club_name}</td>\n                <td>{val.keyword_name}</td>\n              </tr>\n\n              );\n            })\n            \n            }\n        </table>\n\n      </div>\n      \n    </div>\n  );\n}\n\nexport default MyAccountPage;\n","import React from 'react';\nimport {Switch, Route, Router} from '../util/router.js';\nimport HomePage from './Home';\nimport AboutPage from './About';\nimport ResourcesPage from './Resources';\nimport EventsPage from './Events';\nimport SignUp from './SignUp';\nimport SMSForm from '../SMSForm';\nimport ContactPage from './Contact';\nimport SignUpPage from './SignUp';\nimport LoginPage from './Login';\nimport EventsTestPage from './EventsTest';\nimport MyAccount from './MyAccount';\n\nfunction App(){\n  return(\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage}/>\n        <Route exact path=\"/Events\" component={EventsPage}/>\n        <Route exact path=\"/SignUp\" component={SignUp}/>\n        <Route exact path=\"/TwilioForm\" component={SMSForm}/>\n        <Route exact path=\"/About\" component={AboutPage}/>\n        <Route exact path=\"/Resources\" component={ResourcesPage}/>\n        <Route exact path=\"/Contact\" component={ContactPage}/>\n        <Route exact path=\"/SignUp\" component={SignUpPage}/>\n        <Route exact path=\"/Login\" component={LoginPage}/>\n        <Route exact path=\"/EventsTest\" component={EventsTestPage}/>\n        <Route exact path=\"/MyAccount\" component={MyAccount}/>\n        \n      </Switch>\n    </Router>\n\n  );\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from '../src/pages/App';\nimport * as serviceWorker from './serviceWorker';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}